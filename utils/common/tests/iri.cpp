#include <chrono>
#include <gtest/gtest.h>
#include <string>
#include <string_view>

#include <iota/utils/common/iri.hpp>

using namespace iota::utils;

const std::string_view SN_payload("sn 270255 XMFB9BMKAFZWJ9ZZHFTVOMKJQEJXTNMZALWFSWIRJSMHFFQVOTKN9RALGWWQGQAVNVXDQDHSXPRJA9999 WGMJRVFJOOUYOSLCJABVBLWQIGUNZDOYSYVCRDIBD9RLPVGLVNDHDHDQNNVFQIXAXBPSBAJDQOGYVYKCX DJBVPUQ9HTCQTLQXMMOLD9RLWHUCMXSDUKDKOSCYNBECNCAQFZJTHSKWTTGWGZPIEMESDHUWICGAZ9999 PHOWHKDLXRONSHDITTZVHAGKSRHZ9MWUSMWKOKPDYQPSUDPOYDDZXDFQHIVWRYY9WWTNJDFAPQ9WZ9999 FHLJXGDXBLNUDJFZOZSYONZQJCYIFJWALUZOLKTKYJ9FY9TAPYFJHUDKYWHH9IHEQFVTDJRJU9JQVXKK9");

const std::string_view TX_payload("tx FCTUIMMLIDJFOMVPHLWTIWVUYKJINKYIKAI9DUZGJPFSWEYHGQWREXTNJJEDMTYIOYFOTICXGBFNA9999 KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU 0 IQTNA9999999999999999999999 1509897914 0 1 STHTBDTVDYOFVOKVRPGRUVFCLFXEYUZYISBOFZZUEFVSOLDADEKQMRXDBEEXDYEGCCHXXDYUEQQVTJSRW JKOMYKTPKTSUAUQJCRBJ99UEOUHEVSVMORJKCIILJHDPICXTAFQCULGYYFVRREXDJEJIGRGVMLRZZ9999 VPZTEHURNXLNBNDLJTJCGLIQZWVIQSSFDL9C9GSSULPJZDKWTAHJNRIHRARWELJPLWLIBDQIIREBA9999 1509897927055");

TEST(IRITest, SNMessageTest)
{
  auto rawmsg = iri::payloadToMsg(SN_payload);
  ASSERT_EQ(iri::IRIMessageType::SN, rawmsg->type());
  auto msg = std::static_pointer_cast<iri::SNMessage>(rawmsg);

  ASSERT_EQ(270255ULL, msg->milestoneIdx());
  ASSERT_STREQ("XMFB9BMKAFZWJ9ZZHFTVOMKJQEJXTNMZALWFSWIRJSMHFFQVOTKN9RALGWWQGQAVNVXDQDHSXPRJA9999", msg->hash().c_str());
  ASSERT_STREQ("WGMJRVFJOOUYOSLCJABVBLWQIGUNZDOYSYVCRDIBD9RLPVGLVNDHDHDQNNVFQIXAXBPSBAJDQOGYVYKCX", msg->address().c_str());
  ASSERT_STREQ("DJBVPUQ9HTCQTLQXMMOLD9RLWHUCMXSDUKDKOSCYNBECNCAQFZJTHSKWTTGWGZPIEMESDHUWICGAZ9999", msg->trunk().c_str());
  ASSERT_STREQ("PHOWHKDLXRONSHDITTZVHAGKSRHZ9MWUSMWKOKPDYQPSUDPOYDDZXDFQHIVWRYY9WWTNJDFAPQ9WZ9999", msg->branch().c_str());
  ASSERT_STREQ("FHLJXGDXBLNUDJFZOZSYONZQJCYIFJWALUZOLKTKYJ9FY9TAPYFJHUDKYWHH9IHEQFVTDJRJU9JQVXKK9", msg->bundle().c_str());
}

TEST(IRITest, TXMessageTest)
{
  auto rawmsg = iri::payloadToMsg(TX_payload);
  ASSERT_EQ(iri::IRIMessageType::TX, rawmsg->type());
  auto msg = std::static_pointer_cast<iri::TXMessage>(rawmsg);

  ASSERT_STREQ("FCTUIMMLIDJFOMVPHLWTIWVUYKJINKYIKAI9DUZGJPFSWEYHGQWREXTNJJEDMTYIOYFOTICXGBFNA9999", msg->hash().c_str());
  ASSERT_STREQ("KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU", msg->address().c_str());
  ASSERT_EQ(0, msg->value());
  ASSERT_STREQ("IQTNA9999999999999999999999", msg->obsoleteTag().c_str());
  ASSERT_EQ(1509897914000, std::chrono::time_point_cast<std::chrono::milliseconds>(msg->timestamp()).time_since_epoch().count());
  ASSERT_EQ(0ULL, msg->currentIndex());
  ASSERT_EQ(1ULL, msg->lastIndex());
  ASSERT_STREQ("STHTBDTVDYOFVOKVRPGRUVFCLFXEYUZYISBOFZZUEFVSOLDADEKQMRXDBEEXDYEGCCHXXDYUEQQVTJSRW", msg->bundle().c_str());
  ASSERT_STREQ("JKOMYKTPKTSUAUQJCRBJ99UEOUHEVSVMORJKCIILJHDPICXTAFQCULGYYFVRREXDJEJIGRGVMLRZZ9999", msg->trunk().c_str());
  ASSERT_STREQ("VPZTEHURNXLNBNDLJTJCGLIQZWVIQSSFDL9C9GSSULPJZDKWTAHJNRIHRARWELJPLWLIBDQIIREBA9999", msg->branch().c_str());
  ASSERT_EQ(1509897927055, std::chrono::time_point_cast<std::chrono::milliseconds>(msg->arrivalTime()).time_since_epoch().count());
}
